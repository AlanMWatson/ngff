$base: "https://ngff.openmicroscopy.org/latest/"

$namespaces:
  ngff:  "https://ngff.openmicroscopy.org/latest/"

$graph:

- name: VersionedType
  doc: |
    Opaque version. Note: likely to deprecate or remove in favor of a context version.
  type: record
  abstract: true
  fields:
    - name: version
      type: string

- name: DatasetMetadata
  doc: |
    Optional information about a Dataset.
  type: record
  extends: [VersionedType]
  fields:
    args:
      type:
        type: array
        items: string
    kwargs:
      type: Any
    method:
      type: string

- name: OmeroMetadata
  doc: |
    Optional rendering info for an Image.
  type: record
  extends: [VersionedType]
  fields:
    channels:
      type:
        type: array
        items: ChannelMetadata
    id: int
    rdefs:
      type: RdefMetadata

- name: ChannelMetadata
  doc: |
    Rendering info for a Channel.
  type: record
  fields:
    active: boolean?
    coefficient: float?
    color: string?
    family: string?
    inverted: boolean?
    label: string?
    window: WindowMetadata

- name: WindowMetadata
  doc: |
    Rendering Window for a Channel.
  type: record
  fields:
    start: float
    end: float
    min: float?
    max: float?

- name: RdefMetadata
  doc: |
    Rendering Rdef for an Image.
  type: record
  fields:
    defaultT: int
    defaultZ: int
    model: string

# This causes "SchemaException: Predicate collision on name" with Multiscale/name
# - name: CreatorMetadata
#   doc: |
#     Creator info for an Image.
#   type: record
#   extends: [VersionedType]
#   fields:
#     name: string

- name: Dataset
  doc: |
    One array series in descending order of size.
  type: record
  fields:
    path:
      type: string

- name: Multiscale
  doc: |
    Identifies pyramid-like collections of arrays.
  type: record
  extends: [VersionedType]
  fields:
  - name: name
    type: [string, "null"]
  - name: datasets
    type:
      type: array
      items: Dataset
  - name: metadata
    type: [DatasetMetadata, "null"]
  - name: type
    type: [string, "null"]
  - name: axes
    type:
      type: array
      items:
        type: enum
        symbols:
          - x
          - y
          - z
          - c
          - t

- name: Image
  doc: |
    OME:Image
  type: record
  documentRoot: true
  fields:
    multiscales:
      type:
        type: array
        items: Multiscale
    omero:
      type: [OmeroMetadata, "null"]
    # _creator: [CreatorMetadata, "null"]

- name: Label
  doc: |
    OME:Label
  type: record
  extends: [Image]
  documentRoot: true
  fields:
    image-label: LabelMetadata

- name: LabelMetadata
  doc: |
    Metadata for a Label
  type: record
  extends: [VersionedType]
  fields:
    source: SourceMetadata
    colors:
      type:
        type: array
        items: LabelColor
    properties:
      type:
        type: array
        items: LabelValueMetadata

- name: SourceMetadata
  doc: |
    Source Image for a Label
  type: record
  fields:
    image: string

- name: LabelValueMetadata
  doc: |
    Specifies metadata for a specified label-value
  type: record
  abstract: true
  fields:
    label-value: int

- name: LabelColor
  doc: |
    Specifies a color for a specified label-value
  type: record
  extends: [LabelValueMetadata]
  fields:
    rgba:
      type:
        type: array
        items: int

- name: LabelProperties
  doc: |
    Somewhere to store custom key-value pairs
  type: record
  extends: [LabelValueMetadata]
  # How to do custom fields? - (anything goes)
